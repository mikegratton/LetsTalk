<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="RequestReplyImpl_8hpp" kind="file" language="C++">
    <compoundname>RequestReplyImpl.hpp</compoundname>
    <includes local="no">fastdds/dds/publisher/Publisher.hpp</includes>
    <includes local="no">functional</includes>
    <includes refid="LetsTalk_8hpp" local="yes">LetsTalk.hpp</includes>
    <includes refid="LetsTalkFwd_8hpp" local="yes">LetsTalkFwd.hpp</includes>
    <includes refid="ParticipantImpl_8hpp" local="yes">ParticipantImpl.hpp</includes>
    <includedby refid="ParticipantImpl_8hpp" local="yes">/home/mike/git/letstalk/src/ParticipantImpl.hpp</includedby>
    <incdepgraph>
      <node id="16">
        <label>list</label>
      </node>
      <node id="30">
        <label>fastdds/dds/subscriber/DataReaderListener.hpp</label>
      </node>
      <node id="15">
        <label>atomic</label>
      </node>
      <node id="34">
        <label>fastcdr/FastBuffer.h</label>
      </node>
      <node id="3">
        <label>functional</label>
      </node>
      <node id="50">
        <label>queue</label>
      </node>
      <node id="53">
        <label>ReaderListenerImpl.hpp</label>
        <link refid="ReaderListenerImpl_8hpp_source"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>fastdds/dds/subscriber/DataReader.hpp</label>
      </node>
      <node id="4">
        <label>LetsTalk.hpp</label>
        <link refid="LetsTalk_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>cstdint</label>
      </node>
      <node id="27">
        <label>fastdds/dds/publisher/DataWriter.hpp</label>
      </node>
      <node id="18">
        <label>FastDdsAlias.hpp</label>
        <link refid="FastDdsAlias_8hpp_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>fastdds/dds/domain/DomainParticipant.hpp</label>
      </node>
      <node id="45">
        <label>ThreadSafeQueue.hpp</label>
        <link refid="ThreadSafeQueue_8hpp_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>fastcdr/Cdr.h</label>
      </node>
      <node id="31">
        <label>meta.hpp</label>
      </node>
      <node id="49">
        <label>ReactorClientImpl.hpp</label>
        <link refid="ReactorClientImpl_8hpp_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>cassert</label>
      </node>
      <node id="26">
        <label>fastdds/dds/domain/DomainParticipantListener.hpp</label>
      </node>
      <node id="39">
        <label>string</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="12">
        <label>fastdds/dds/topic/TypeSupport.hpp</label>
      </node>
      <node id="29">
        <label>ReaderListener.hpp</label>
        <link refid="ReaderListener_8hpp_source"/>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>Reactor.h</label>
      </node>
      <node id="21">
        <label>Guid.hpp</label>
        <link refid="Guid_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>RequestReply.hpp</label>
        <link refid="RequestReply_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ActiveObject.hpp</label>
        <link refid="ActiveObject_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="38">
        <label>Reactor.hpp</label>
        <link refid="Reactor_8hpp_source"/>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>fastdds/rtps/common/SerializedPayload.h</label>
      </node>
      <node id="42">
        <label>condition_variable</label>
      </node>
      <node id="10">
        <label>LetsTalkFwd.hpp</label>
        <link refid="LetsTalkFwd_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>future</label>
      </node>
      <node id="36">
        <label>fastrtps/utils/md5.h</label>
      </node>
      <node id="51">
        <label>ReactorServerImpl.hpp</label>
        <link refid="ReactorServerImpl_8hpp_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>ParticipantImpl.hpp</label>
        <link refid="ParticipantImpl_8hpp_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="19">
        <label>fastdds/rtps/common/all_common.h</label>
      </node>
      <node id="37">
        <label>fastdds/dds/topic/TopicDataType.hpp</label>
      </node>
      <node id="20">
        <label>iosfwd</label>
      </node>
      <node id="32">
        <label>PubSubType.hpp</label>
        <link refid="PubSubType_8hpp_source"/>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>deque</label>
      </node>
      <node id="5">
        <label>Participant.hpp</label>
        <link refid="Participant_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>mutex</label>
      </node>
      <node id="54">
        <label>fastdds/dds/subscriber/Subscriber.hpp</label>
      </node>
      <node id="52">
        <label>chrono</label>
      </node>
      <node id="11">
        <label>fastdds/dds/topic/Topic.hpp</label>
      </node>
      <node id="43">
        <label>ReactorServer.hpp</label>
        <link refid="ReactorServer_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>ParticipantLogger.hpp</label>
        <link refid="ParticipantLogger_8hpp_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>thread</label>
      </node>
      <node id="1">
        <label>/home/mike/git/letstalk/src/RequestReplyImpl.hpp</label>
        <link refid="RequestReplyImpl_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>ReactorClient.hpp</label>
        <link refid="ReactorClient_8hpp_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>cstring</label>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="2">
        <label>fastdds/dds/publisher/Publisher.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>/home/mike/git/letstalk/src/ReaderListenerImpl.hpp</label>
        <link refid="ReaderListenerImpl_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/mike/git/letstalk/src/LetsTalk.hpp</label>
        <link refid="LetsTalk_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/mike/git/letstalk/src/ParticipantImpl.hpp</label>
        <link refid="ParticipantImpl_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/mike/git/letstalk/src/Participant.hpp</label>
        <link refid="Participant_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/mike/git/letstalk/src/RequestReplyImpl.hpp</label>
        <link refid="RequestReplyImpl_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacelt">lt</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fastdds/dds/publisher/Publisher.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LetsTalk.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LetsTalkFwd.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ParticipantImpl.hpp&quot;</highlight></codeline>
<codeline lineno="10"><highlight class="comment">//<sp/>Request/Reply</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelt" kindref="compound">lt</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">//<sp/>Request/Reply<sp/>naming<sp/>and<sp/>constants</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">std::string<sp/>requestName(std::string<sp/>i_name);</highlight></codeline>
<codeline lineno="17"><highlight class="normal">std::string<sp/>replyName(std::string<sp/>i_name);</highlight></codeline>
<codeline lineno="18"><highlight class="normal">efr::Time_t<sp/>getBadTime();</highlight></codeline>
<codeline lineno="19"><highlight class="normal">efr::SampleIdentity<sp/>getBadId();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">//<sp/>ServiceProvider<sp/>is<sp/>an<sp/>internal<sp/>active<sp/>object<sp/>used<sp/>to<sp/>convert<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>subscription<sp/>to<sp/>a<sp/>callback<sp/>to<sp/>the<sp/>actual<sp/>service<sp/>provision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>It<sp/>tracks<sp/>the<sp/>Guid<sp/>of<sp/>the<sp/>request<sp/>automatically.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Req,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rep,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ServiceProvider<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>efd::DataReaderListener,<sp/>ActiveObject<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>Publisher<sp/>m_sender;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>C<sp/>m_providerCallback;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>Guid<sp/>m_Id;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_serviceName;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>ServiceProvider(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_serviceName,<sp/>C<sp/>i_providerCallback,<sp/>Publisher<sp/>i_publisher)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_sender(i_publisher),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_providerCallback(i_providerCallback),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_Id(m_sender.guid()),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_serviceName(i_serviceName)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>on_data_available(efd::DataReader*<sp/>i_reader)</highlight><highlight class="keyword"><sp/>override</highlight></codeline>
<codeline lineno="45"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/>==<sp/>i_reader)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Req<sp/>data;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>efd::SampleInfo<sp/>info;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ReturnCode_t::RETCODE_OK<sp/>==<sp/>i_reader-&gt;take_next_sample(&amp;data,<sp/>&amp;info))<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info.valid_data)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guid<sp/>relatedId<sp/>=<sp/><ref refid="namespacelt_1afe6f6d4a6f7d87d8e4ec76a6aeb10357" kindref="member">toLetsTalkGuid</ref>(info.sample_identity);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LT_LOG<sp/>&lt;&lt;<sp/>m_serviceName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>Request<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>relatedId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>received\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>submitJob([</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>data,<sp/>relatedId]()<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Rep<sp/>reply;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isBad<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reply<sp/>=<sp/>m_providerCallback(data);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isBad<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LT_LOG<sp/>&lt;&lt;<sp/>m_serviceName<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>Sending<sp/>reply<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>relatedId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>result<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(isBad<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;FAILED&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;okay&quot;</highlight><highlight class="normal">)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_sender.publish(reply,<sp/>m_Id.increment(),<sp/>relatedId,<sp/>isBad);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Req,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rep&gt;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RequesterImpl<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>RequesterImpl(std::shared_ptr&lt;Participant&gt;<sp/>i_participant,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_serviceName)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_participant(i_participant),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_serviceName(i_serviceName),</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_requestPub(m_participant-&gt;advertise&lt;Req&gt;(detail::requestName(m_serviceName))),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_sessionId(m_requestPub.guid())</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_participant-&gt;subscribe&lt;Rep&gt;(</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::replyName(serviceName()),</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](Rep<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>data,<sp/>Guid<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>nope,<sp/>Guid<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>id)<sp/>{<sp/>this-&gt;onReply(data,<sp/>nope,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);<sp/>});</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>~RequesterImpl()<sp/>{<sp/>m_participant-&gt;unsubscribe(detail::replyName(serviceName()));<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>serviceName()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_serviceName;<sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>std::future&lt;Rep&gt;<sp/>request(Req<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_request)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Send<sp/>the<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guid<sp/>requestId;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::future&lt;Rep&gt;<sp/>future;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>guard(m_lock);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>requestId<sp/>=<sp/>m_sessionId.increment();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>future<sp/>=<sp/>m_requests[requestId].get_future();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_requestPub.publish(i_request,<sp/>requestId,<sp/><ref refid="structlt_1_1Guid_1a30e970fb6e2e37d17a284b76ea936c95" kindref="member">Guid::UNKNOWN</ref>());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LT_LOG<sp/>&lt;&lt;<sp/>serviceName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>Making<sp/>request<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>requestId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>future;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isConnected()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="113"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>providerCount<sp/>=<sp/>m_participant-&gt;subscriberCount(detail::requestName(serviceName()));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(providerCount<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LT_LOG<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning!<sp/>Service<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>serviceName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>has<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>providerCount<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>providers.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>providerCount<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>impostorsExist()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_participant-&gt;subscriberCount(detail::requestName(serviceName()))<sp/>&gt;<sp/>1;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>onReply(Rep<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>data,<sp/>Guid<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>Guid<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>relatedId)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Guid<sp/>badId<sp/>=<sp/>relatedId.makeBadVersion();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_lock&lt;std::mutex&gt;<sp/>guard(m_lock);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>m_requests.find(relatedId);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>m_requests.end())<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LT_LOG<sp/>&lt;&lt;<sp/>serviceName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>Success<sp/>response<sp/>received<sp/>for<sp/>pending<sp/>request<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>relatedId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second.set_value(data);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_requests.erase(it);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>m_requests.find(badId);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>!=<sp/>m_requests.end())<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LT_LOG<sp/>&lt;&lt;<sp/>serviceName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>Failure<sp/>response<sp/>received<sp/>for<sp/>pending<sp/>request<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>badId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second.set_exception(std::make_exception_ptr(std::runtime_error(</highlight><highlight class="stringliteral">&quot;RPC<sp/>failed&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_requests.erase(it);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LT_LOG<sp/>&lt;&lt;<sp/>serviceName()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>Reply<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>relatedId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>(aka<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>badId<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>ignored.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Participant&gt;<sp/>m_participant;<sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_serviceName;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>Publisher<sp/>m_requestPub;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>Guid<sp/>m_sessionId;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Promise<sp/>=<sp/>std::promise&lt;Rep&gt;;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>std::mutex<sp/>m_lock;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;Guid,<sp/>Promise&gt;<sp/>m_requests;<sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal">};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Req,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rep&gt;</highlight></codeline>
<codeline lineno="159" refid="classlt_1_1Requester_1aaed26041cc5c83ecfd391d5d374514aa" refkind="member"><highlight class="normal">std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/><ref refid="classlt_1_1Requester_1aaed26041cc5c83ecfd391d5d374514aa" kindref="member">Requester&lt;Req, Rep&gt;::serviceName</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="160"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_backend-&gt;serviceName();</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Req,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rep&gt;</highlight></codeline>
<codeline lineno="165" refid="classlt_1_1Requester_1a7e160a410090e37aafd30e433efda865" refkind="member"><highlight class="normal">std::future&lt;Rep&gt;<sp/><ref refid="classlt_1_1Requester_1a7e160a410090e37aafd30e433efda865" kindref="member">Requester&lt;Req, Rep&gt;::request</ref>(Req<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_request)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_backend-&gt;request(i_request);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Req,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rep&gt;</highlight></codeline>
<codeline lineno="171" refid="classlt_1_1Requester_1a62a70c92466b241ae1e08e6fd085ce2d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1Requester_1a62a70c92466b241ae1e08e6fd085ce2d" kindref="member">Requester&lt;Req, Rep&gt;::isConnected</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="172"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_backend-&gt;isConnected();</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Req,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rep&gt;</highlight></codeline>
<codeline lineno="177" refid="classlt_1_1Requester_1a81261c367660bbfb45a7675a7b2269f1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1Requester_1a81261c367660bbfb45a7675a7b2269f1" kindref="member">Requester&lt;Req, Rep&gt;::impostorsExist</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="178"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_backend-&gt;impostorsExist();</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lt</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mike/git/letstalk/src/RequestReplyImpl.hpp"/>
  </compounddef>
</doxygen>
