<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ParticipantImpl_8hpp" kind="file" language="C++">
    <compoundname>ParticipantImpl.hpp</compoundname>
    <includes local="no">cassert</includes>
    <includes local="no">string</includes>
    <includes refid="LetsTalk_8hpp" local="yes">LetsTalk.hpp</includes>
    <includes refid="ReactorClientImpl_8hpp" local="yes">ReactorClientImpl.hpp</includes>
    <includes refid="ReactorServerImpl_8hpp" local="yes">ReactorServerImpl.hpp</includes>
    <includes refid="ReaderListenerImpl_8hpp" local="yes">ReaderListenerImpl.hpp</includes>
    <includes refid="RequestReplyImpl_8hpp" local="yes">RequestReplyImpl.hpp</includes>
    <includedby refid="Participant_8hpp" local="yes">/home/mike/git/letstalk/src/Participant.hpp</includedby>
    <includedby refid="ReaderListenerImpl_8hpp" local="yes">/home/mike/git/letstalk/src/ReaderListenerImpl.hpp</includedby>
    <includedby refid="RequestReplyImpl_8hpp" local="yes">/home/mike/git/letstalk/src/RequestReplyImpl.hpp</includedby>
    <incdepgraph>
      <node id="17">
        <label>list</label>
      </node>
      <node id="31">
        <label>fastdds/dds/subscriber/DataReaderListener.hpp</label>
      </node>
      <node id="15">
        <label>atomic</label>
      </node>
      <node id="35">
        <label>fastcdr/FastBuffer.h</label>
      </node>
      <node id="16">
        <label>functional</label>
      </node>
      <node id="48">
        <label>queue</label>
      </node>
      <node id="51">
        <label>ReaderListenerImpl.hpp</label>
        <link refid="ReaderListenerImpl_8hpp_source"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>fastdds/dds/subscriber/DataReader.hpp</label>
      </node>
      <node id="4">
        <label>LetsTalk.hpp</label>
        <link refid="LetsTalk_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>cstdint</label>
      </node>
      <node id="28">
        <label>fastdds/dds/publisher/DataWriter.hpp</label>
      </node>
      <node id="19">
        <label>FastDdsAlias.hpp</label>
        <link refid="FastDdsAlias_8hpp_source"/>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>fastdds/dds/domain/DomainParticipant.hpp</label>
      </node>
      <node id="45">
        <label>ThreadSafeQueue.hpp</label>
        <link refid="ThreadSafeQueue_8hpp_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>fastcdr/Cdr.h</label>
      </node>
      <node id="32">
        <label>meta.hpp</label>
      </node>
      <node id="47">
        <label>ReactorClientImpl.hpp</label>
        <link refid="ReactorClientImpl_8hpp_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cassert</label>
      </node>
      <node id="27">
        <label>fastdds/dds/domain/DomainParticipantListener.hpp</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="12">
        <label>fastdds/dds/topic/TypeSupport.hpp</label>
      </node>
      <node id="30">
        <label>ReaderListener.hpp</label>
        <link refid="ReaderListener_8hpp_source"/>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="40">
        <label>Reactor.h</label>
      </node>
      <node id="22">
        <label>Guid.hpp</label>
        <link refid="Guid_8hpp_source"/>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="44">
        <label>RequestReply.hpp</label>
        <link refid="RequestReply_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>ActiveObject.hpp</label>
        <link refid="ActiveObject_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="39">
        <label>Reactor.hpp</label>
        <link refid="Reactor_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>fastdds/rtps/common/SerializedPayload.h</label>
      </node>
      <node id="42">
        <label>condition_variable</label>
      </node>
      <node id="10">
        <label>LetsTalkFwd.hpp</label>
        <link refid="LetsTalkFwd_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>future</label>
      </node>
      <node id="37">
        <label>fastrtps/utils/md5.h</label>
      </node>
      <node id="49">
        <label>ReactorServerImpl.hpp</label>
        <link refid="ReactorServerImpl_8hpp_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/mike/git/letstalk/src/ParticipantImpl.hpp</label>
        <link refid="ParticipantImpl_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="20">
        <label>fastdds/rtps/common/all_common.h</label>
      </node>
      <node id="38">
        <label>fastdds/dds/topic/TopicDataType.hpp</label>
      </node>
      <node id="21">
        <label>iosfwd</label>
      </node>
      <node id="33">
        <label>PubSubType.hpp</label>
        <link refid="PubSubType_8hpp_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="46">
        <label>deque</label>
      </node>
      <node id="5">
        <label>Participant.hpp</label>
        <link refid="Participant_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>mutex</label>
      </node>
      <node id="52">
        <label>fastdds/dds/subscriber/Subscriber.hpp</label>
      </node>
      <node id="50">
        <label>chrono</label>
      </node>
      <node id="11">
        <label>fastdds/dds/topic/Topic.hpp</label>
      </node>
      <node id="43">
        <label>ReactorServer.hpp</label>
        <link refid="ReactorServer_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>ParticipantLogger.hpp</label>
        <link refid="ParticipantLogger_8hpp_source"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>thread</label>
      </node>
      <node id="53">
        <label>RequestReplyImpl.hpp</label>
        <link refid="RequestReplyImpl_8hpp_source"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="41">
        <label>ReactorClient.hpp</label>
        <link refid="ReactorClient_8hpp_source"/>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>cstring</label>
      </node>
      <node id="13">
        <label>memory</label>
      </node>
      <node id="54">
        <label>fastdds/dds/publisher/Publisher.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>/home/mike/git/letstalk/src/ReaderListenerImpl.hpp</label>
        <link refid="ReaderListenerImpl_8hpp_source"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/mike/git/letstalk/src/LetsTalk.hpp</label>
        <link refid="LetsTalk_8hpp_source"/>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/mike/git/letstalk/src/ParticipantImpl.hpp</label>
        <link refid="ParticipantImpl_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/mike/git/letstalk/src/Participant.hpp</label>
        <link refid="Participant_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/home/mike/git/letstalk/src/RequestReplyImpl.hpp</label>
        <link refid="RequestReplyImpl_8hpp_source"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacelt">lt</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LetsTalk.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ReactorClientImpl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ReactorServerImpl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ReaderListenerImpl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RequestReplyImpl.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacelt" kindref="compound">lt</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>eprosima::fastrtps::types::ReturnCode_t;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">//<sp/>Publish/Subscribe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Most<sp/>of<sp/>these<sp/>try<sp/>to<sp/>push<sp/>work<sp/>off<sp/>on<sp/>generic<sp/>doSubscribe/doPublish/doAdvertise<sp/>methods</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>Make<sp/>the<sp/>listener<sp/>(which<sp/>needs<sp/>the<sp/>types),<sp/>then<sp/>call<sp/>the<sp/>type-erased<sp/>doSubscribe</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="24" refid="classlt_1_1Participant_1a6b93ed397c29b3b5cfb42707255ec66d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1Participant_1a6b93ed397c29b3b5cfb42707255ec66d" kindref="member">Participant::subscribe</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_topic,<sp/>C<sp/>i_callback,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_qosProfile,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_historyDepth)</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>listener<sp/>=<sp/>detail::makeListener&lt;T,<sp/>C&gt;(i_callback);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlt_1_1Participant_1a59eab541fa6944e560b65f29102642f2" kindref="member">doSubscribe</ref>(i_topic,<sp/>efd::TypeSupport(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>detail::PubSubType&lt;T&gt;()),<sp/>listener,<sp/>i_qosProfile,<sp/>i_historyDepth);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Make<sp/>the<sp/>specialized<sp/>queue<sp/>listener<sp/>(which<sp/>needs<sp/>the<sp/>types),<sp/>then<sp/>call<sp/>the<sp/>type-erased<sp/>doSubscribe</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="35" refid="classlt_1_1Participant_1a630cfe645c6dee7e8b44c410f7d42b80" refkind="member"><highlight class="normal">QueuePtr&lt;T&gt;<sp/><ref refid="classlt_1_1Participant_1a6b93ed397c29b3b5cfb42707255ec66d" kindref="member">Participant::subscribe</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_topic,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_qosProfile,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_historyDepth)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>queue<sp/>=<sp/>std::make_shared&lt;ThreadSafeQueue&lt;T&gt;&gt;(i_historyDepth);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>listener<sp/>=<sp/>detail::makeListener&lt;T&gt;([queue](std::unique_ptr&lt;T&gt;<sp/>i_sample)<sp/>{<sp/>queue-&gt;push(std::move(i_sample));<sp/>});</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlt_1_1Participant_1a59eab541fa6944e560b65f29102642f2" kindref="member">doSubscribe</ref>(i_topic,<sp/>efd::TypeSupport(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>detail::PubSubType&lt;T&gt;()),<sp/>listener,<sp/>i_qosProfile,<sp/>1);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>Make<sp/>the<sp/>writer<sp/>(which<sp/>needs<sp/>the<sp/>types),<sp/>then<sp/>call<sp/>the<sp/>type-erased<sp/>doAdvertise</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="47" refid="classlt_1_1Participant_1ad73d8f2561d6c2b679d402ac909c41fe" refkind="member"><highlight class="normal"><ref refid="classlt_1_1Publisher" kindref="compound">Publisher</ref><sp/><ref refid="classlt_1_1Participant_1ad73d8f2561d6c2b679d402ac909c41fe" kindref="member">Participant::advertise</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_topic,<sp/>std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_qosProfile,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i_historyDepth)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1Participant_1a3dcd9a92e2f4cee0f4dc3a0585f4d829" kindref="member">doAdvertise</ref>(i_topic,<sp/>efd::TypeSupport(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>detail::PubSubType&lt;T&gt;()),<sp/>i_qosProfile,<sp/>i_historyDepth);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>Type-using<sp/>publish<sp/>method<sp/>on<sp/>otherwise<sp/>type-erased<sp/>publisher</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1Publisher_1aa9a5ba8316bc12616e663feef7531ad3" kindref="member">Publisher::publish</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_data)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1Publisher_1adb2a8be0326aeeeada28e65b72c8793a" kindref="member">doPublish</ref>(&amp;</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">T&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i_data));</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>Type-using<sp/>publish<sp/>method<sp/>on<sp/>otherwise<sp/>type-erased<sp/>publisher.<sp/>This<sp/>one<sp/>includes<sp/>sample<sp/>correlation<sp/>data.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="65" refid="classlt_1_1Publisher_1a258f6e74be05dd14d71919d23ac93e64" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1Publisher_1aa9a5ba8316bc12616e663feef7531ad3" kindref="member">Publisher::publish</ref>(T<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_data,<sp/><ref refid="structlt_1_1Guid" kindref="compound">Guid</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_myId,<sp/><ref refid="structlt_1_1Guid" kindref="compound">Guid</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_relatedId,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>i_bad)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1Publisher_1adb2a8be0326aeeeada28e65b72c8793a" kindref="member">doPublish</ref>(&amp;</highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal">T&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(i_data),<sp/>i_myId,<sp/>i_relatedId,<sp/>i_bad);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="71" refid="classlt_1_1Publisher_1aa9a5ba8316bc12616e663feef7531ad3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1Publisher_1aa9a5ba8316bc12616e663feef7531ad3" kindref="member">Publisher::publish</ref>(std::unique_ptr&lt;T&gt;<sp/>i_data)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1Publisher_1adb2a8be0326aeeeada28e65b72c8793a" kindref="member">doPublish</ref>(i_data.get());</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1Publisher_1aa9a5ba8316bc12616e663feef7531ad3" kindref="member">Publisher::publish</ref>(std::unique_ptr&lt;T&gt;<sp/>i_data,<sp/><ref refid="structlt_1_1Guid" kindref="compound">Guid</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_myId,<sp/><ref refid="structlt_1_1Guid" kindref="compound">Guid</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_relatedId,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>i_bad)</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1Publisher_1adb2a8be0326aeeeada28e65b72c8793a" kindref="member">doPublish</ref>(i_data.get(),<sp/>i_myId,<sp/>i_relatedId,<sp/>i_bad);</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="comment">//<sp/>Replier<sp/>creation:<sp/>just<sp/>save<sp/>the<sp/>listener<sp/>inside<sp/>the<sp/>FastDDS<sp/>data<sp/>reader<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Req,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rep,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>C&gt;</highlight></codeline>
<codeline lineno="85" refid="classlt_1_1Participant_1a73f683deb5bbc57ce3834a0f2694433c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1Participant_1ad73d8f2561d6c2b679d402ac909c41fe" kindref="member">Participant::advertise</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_serviceName,<sp/>C<sp/>i_serviceProvider)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlt_1_1Publisher" kindref="compound">Publisher</ref><sp/>sender<sp/>=<sp/>advertise&lt;Rep&gt;(detail::replyName(i_serviceName));</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>listener<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>detail::ServiceProvider&lt;Req,<sp/>Rep,<sp/>C&gt;(i_serviceName,<sp/>i_serviceProvider,<sp/>sender);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classlt_1_1Participant_1a59eab541fa6944e560b65f29102642f2" kindref="member">doSubscribe</ref>(detail::requestName(i_serviceName),<sp/>efd::TypeSupport(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>detail::PubSubType&lt;Req&gt;()),<sp/>listener,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="comment">//<sp/>Requester<sp/>creation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Req,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rep&gt;</highlight></codeline>
<codeline lineno="95" refid="classlt_1_1Participant_1a798f568a7141b68812ccf67990c74d3f" refkind="member"><highlight class="normal"><ref refid="classlt_1_1Requester" kindref="compound">Requester&lt;Req, Rep&gt;</ref><sp/><ref refid="classlt_1_1Participant_1a798f568a7141b68812ccf67990c74d3f" kindref="member">Participant::makeRequester</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_serviceName)</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1Requester" kindref="compound">Requester&lt;Req, Rep&gt;</ref>(</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;detail::RequesterImpl&lt;Req,<sp/>Rep&gt;&gt;(this-&gt;shared_from_this(),<sp/>i_serviceName));</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="comment">//<sp/>Reactor<sp/>creation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Req,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rep,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="104" refid="classlt_1_1Participant_1a40b328a0429210a22782e78996784347" refkind="member"><highlight class="normal"><ref refid="classlt_1_1ReactorServer" kindref="compound">ReactorServer&lt;Req, Rep, P&gt;</ref><sp/><ref refid="classlt_1_1Participant_1a40b328a0429210a22782e78996784347" kindref="member">Participant::makeReactorServer</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_serviceName)</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1ReactorServer" kindref="compound">ReactorServer&lt;Req, Rep, P&gt;</ref>(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;detail::ReactorServerBackend&lt;Req,<sp/>Rep,<sp/>P&gt;&gt;(this-&gt;shared_from_this(),<sp/>i_serviceName));</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Req,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Rep,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>P&gt;</highlight></codeline>
<codeline lineno="111" refid="classlt_1_1Participant_1a730ed9f2cd7bf929767485b419932fa1" refkind="member"><highlight class="normal"><ref refid="classlt_1_1ReactorClient" kindref="compound">ReactorClient&lt;Req, Rep, P&gt;</ref><sp/><ref refid="classlt_1_1Participant_1a730ed9f2cd7bf929767485b419932fa1" kindref="member">Participant::makeReactorClient</ref>(std::string<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>i_serviceName)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classlt_1_1ReactorClient" kindref="compound">ReactorClient&lt;Req, Rep, P&gt;</ref>(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::make_shared&lt;detail::ReactorClientBackend&lt;Req,<sp/>Rep,<sp/>P&gt;&gt;(this-&gt;shared_from_this(),<sp/>i_serviceName));</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>lt</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/mike/git/letstalk/src/ParticipantImpl.hpp"/>
  </compounddef>
</doxygen>
